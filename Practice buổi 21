--- 1) Thống kê tổng số lượng người mua và số lượng đơn hàng đã hoàn thành mỗi tháng ( Từ 1/2019-4/2022)
select FORMAT_DATE('%Y-%m', delivered_at ) as month_year
, count (user_id) as total_user, count (order_id) as total_order
from bigquery-public-data.thelook_ecommerce.order_items
 where status='Complete' 
 and FORMAT_DATE('%Y-%m', delivered_at ) between '2019-01' and '2022-04'
 group by FORMAT_DATE('%Y-%m', delivered_at )

--- 2 Thống kê giá trị đơn hàng trung bình và tổng số người dùng khác nhau mỗi tháng 
select FORMAT_DATE('%Y-%m', delivered_at) as month_year,
count (distinct user_id) as distinct_user_id,
round(sum(sale_price)/count(order_id),1) as avg_order_value 
from bigquery-public-data.thelook_ecommerce.order_items
where FORMAT_DATE('%Y-%m', delivered_at ) between '2019-01' and '2022-04'
group by FORMAT_DATE('%Y-%m', delivered_at)

--- 3) Tìm các khách hàng có trẻ tuổi nhất và lớn tuổi nhất theo từng giới tính ( Từ 1/2019-4/2022)
CREATE TEMP TABLE youngest_users AS
WITH youngest AS (
  SELECT gender, MIN(age) AS min_age 
  FROM bigquery-public-data.thelook_ecommerce.users 
  GROUP BY gender
)
SELECT a.first_name, a.last_name, a.gender, a.age 
FROM bigquery-public-data.thelook_ecommerce.users AS a 
JOIN youngest AS b
ON a.gender = b.gender 
WHERE a.age = b.min_age
AND FORMAT_DATE('%Y-%m', a.created_at) BETWEEN '2019-01' AND '2022-04';

CREATE TEMP TABLE oldest_users AS
WITH oldest AS (
  SELECT gender, MAX(age) AS max_age 
  FROM bigquery-public-data.thelook_ecommerce.users 
  GROUP BY gender
)
SELECT a.first_name, a.last_name, a.gender, a.age 
FROM bigquery-public-data.thelook_ecommerce.users AS a 
JOIN oldest AS b
ON a.gender = b.gender 
WHERE a.age = b.max_age
AND FORMAT_DATE('%Y-%m', a.created_at) BETWEEN '2019-01' AND '2022-04';

CREATE TEMP TABLE customer_info AS
SELECT * FROM youngest_users
UNION ALL
SELECT * FROM oldest_users;

SELECT gender,count(*) as number, age from weighty-obelisk-430602-g4._scriptcc84188bdbb5fea1b669fa479840e2855e596622.customer_info 
group by gender, age

--- 4) ----Thống kê top 5 sản phẩm có lợi nhuận cao nhất từng tháng (xếp hạng cho từng sản phẩm)
--month_year ( yyyy-mm), product_id, product_name, sales, cost, profit, rank_per_month
SELECT * FROM  
(
  with profit_table as 
(SELECT 
a.name as product_name,
a.id as product_id,
round(sum(b.sale_price),2) as sales, 
round(sum(a.cost),2) as cost, 
round (sum(b.sale_price)-sum(a.cost),1) as profit,
CAST(FORMAT_DATE('%Y-%m',b.delivered_at) AS STRING) as month_year
from bigquery-public-data.thelook_ecommerce.products as a
join bigquery-public-data.thelook_ecommerce.order_items as b 
on a.id=b.id
where FORMAT_DATE('%Y-%m',b.delivered_at) between '2019-01' and '2022-04'
and b.status ='Complete'
group by month_year,a.id, a.name)
select *, 
DENSE_RANK () OVER (PARTITION BY month_year ORDER BY profit_table.profit, month_year DESC) as rank_per_month
from profit_table
) as rank_t 
where rank_t.rank_per_month <=5 
order by rank_t.month_year

--- 5) Thống kê tổng doanh thu theo ngày của từng danh mục sản phẩm (category) trong 3 tháng qua (giả sử ngày hiện tại là 15/4/2022)
select a.category as product_categories, 
round(sum (b.sale_price),1) as revenue,
FORMAT_DATE('%Y-%m-%d',b.delivered_at) as day,
from bigquery-public-data.thelook_ecommerce.products as a 
join bigquery-public-data.thelook_ecommerce.order_items as b 
on a.id=b.id 
where FORMAT_DATE('%Y-%m-%d',b.delivered_at) between '2022-01-15' and '2022-04-15'
and b.status ='Complete'
group by day, a.category
